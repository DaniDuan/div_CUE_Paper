install.packages(c("ggplot2", "reshape2", "minpack.lm"))
install.packages("ggplot2")
install.packages(c("ggplot2", "reshape2", "minpack.lm"))
install.packages("grid")
source("~/Documents/div_cue_paper/code/TPC_processing.R", encoding = 'UTF-8')
setwd("~/Documents/div_cue_paper/code/")
library(ggplot2)
EMP_data = read.csv("../data/EMP.csv", header = T)
names(EMP_data) = c("ID", "Sample", "Temp", "pH", "Richness")
EMP_data = subset(EMP_data,Temp != "" & Temp <= 25 & Temp > 0)
scatter.smooth(EMP_data$Temp, EMP_data$Richness)
m = max(EMP_data$Richness)
EMP_data$relative_rich = EMP_data$Richness/m
scatter.smooth(EMP_data$Temp, EMP_data$relative_rich)
# write.csv(EMP_data, "../data/EMP_filtered.csv", row.names=T)
quantile(EMP_data$relative_rich, probs = 0.99)
quan = c()
for(i in unique(EMP_data$Temp)){
sub = subset(EMP_data, Temp == i)
quan = c(quan, quantile(sub$relative_rich, probs = 0.99))
}
quan
EMP_data = read.csv("../data/EMP.csv", header = T)
names(EMP_data) = c("ID", "Sample", "Temp", "pH", "Richness")
EMP_data = subset(EMP_data,Temp != "" & Temp <= 30 & Temp > 0)
scatter.smooth(EMP_data$Temp, EMP_data$Richness)
m = max(EMP_data$Richness)
EMP_data$relative_rich = EMP_data$Richness/m
scatter.smooth(EMP_data$Temp, EMP_data$relative_rich)
quantile(EMP_data$relative_rich, probs = 0.99)
quan = c()
for(i in unique(EMP_data$Temp)){
sub = subset(EMP_data, Temp == i)
quan = c(quan, quantile(sub$relative_rich, probs = 0.99))
}
write.csv(EMP_data, "../data/EMP_filtered.csv", row.names=T)
CUE_Values= data.frame()
for(i in 1:nrow(grow_data)){
CUE_Values = rbind(CUE_Values, CUE(G = Schoolfield(Temp = 273.15, B0 = grow_data$B0[i], T_pk = grow_data$T_pk[i], Ea = grow_data$Ea[i], E_D = grow_data$E_D[i]), R = Schoolfield(Temp = 273.15:323.15, B0 = res_data$B0[i], T_pk = res_data$T_pk[i], Ea = res_data$Ea[i], E_D = res_data$E_D[i])))
}
EMP_data = read.csv("../data/EMP.csv", header = T)
names(EMP_data) = c("ID", "Sample", "Temp", "pH", "Richness")
EMP_data = subset(EMP_data,Temp != "" & Temp <= 30 & Temp > 0)
scatter.smooth(EMP_data$Temp, EMP_data$Richness)
m = max(EMP_data$Richness)
EMP_data$relative_rich = EMP_data$Richness/m
scatter.smooth(EMP_data$Temp, EMP_data$relative_rich)
